---
const { title, img, desc, url, badges = [], tags, extra, target = "_blank" } = Astro.props;
const badgeColors = {
  Accepted: "bg-base-300",
  Rejected: "bg-red-100 text-red-800",
  NEW: "badge-secondary"
};
import { Image } from "astro:assets";
const tag_url = typeof url === 'string'
  ? url.split("/").slice(0, -1).join("/") + "/tag"
  : "";
---

<div class="rounded-lg bg-base-100 hover:shadow-xl transition ease-in-out hover:scale-[102%]">
  {url && typeof url === "string" ? (
  <a href={url} target={target} rel="noopener noreferrer" class="block">
    <div class="hero-content flex-col md:flex-row">
        <img
          src={img}
          class="w-full md:w-[240px] object-cover rounded-lg shadow-md"
          alt={title}
        />
        <div>
          <h2 class="text-xl font-bold">{title}</h2>
          <div class="flex flex-wrap items-center gap-2 my-1">
            {badges.map((b) => (
              <div class={`badge mx-1 ${badgeColors[b] || "badge-secondary"}`}>{b}</div>
            ))}
          </div>
          <p class="py-1 text-1xl" set:html={desc}></p>
          <p class="py-1 text-sm text-gray-500">{extra}</p>
        </div>
      </div>
    </a>
  ) : (
    <div class="hero-content flex-col md:flex-row cursor-default">
      <img
        src={img}
        class="w-full md:w-[240px] object-cover rounded-lg shadow-md"
        alt={title}
      />
      <div>
        <h2 class="text-xl font-bold">{title}</h2>
        <div class="flex flex-wrap items-center gap-2 my-1">
          {badges.map((b) => (
            <div class={`badge mx-1 ${badgeColors[b] || "badge-secondary"}`}>{b}</div>
          ))}
        </div>
        <p class="py-1 text-1xl" set:html={desc}></p>
        <p class="py-1 text-sm text-gray-500">{extra}</p>
      </div>
    </div>
  )}
</div>
